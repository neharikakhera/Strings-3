// Time complexity : O(N)
// Space complexity : constant
class Solution {
    Map<Integer, String> map;
    
    public String intToRoman(int num) {
        map = new HashMap<>();
        map.put(1, "I"); map.put(4, "IV"); map.put(5, "V");map.put(9, "IX");
        map.put(10, "X"); map.put(90, "XC");map.put(100, "C");map.put(400, "CD"); map.put(500, "D"); map.put(900, "CM");
        map.put(1000, "M"); map.put(50, "L"); map.put(40, "XL");
        
        if(num <= 0) return "";
        
        String roman = "";

            int x = num/1000;
            while(x > 0){
                roman = roman + map.get(1000);
                x--;
            }
            num = num % 1000;
            if(num % 1000 != 0){
                roman = roman + helper(num % 1000);
          
        }
        return roman;
    }
    
    public String helper(int num){
        if(num == 0) return "";
        else if(num >= 1 && num < 4){
            int freq = num/1;
            StringBuilder br = new StringBuilder();
          
            for(int i = 0; i< freq; i++){
                br.append(map.get(1));
            }
            return br.toString() + helper(num%1);
        }
        else if(num == 4)
            return map.get(4);
        
        else if(num >= 5 && num < 9){
            int freq = num/5;
            StringBuilder br = new StringBuilder();
           
            for(int i = 0; i< freq; i++){
                br.append(map.get(5));
            }
            return br.toString() + helper(num%5);
        }
        else if(num == 9)
            return map.get(9);

        else if(num >= 10 && num < 40){
            int freq = num/10;
            StringBuilder br = new StringBuilder();
          
            for(int i = 0; i< freq; i++){
                br.append(map.get(10));
            }
            return br.toString() + helper(num%10);
        }
        else if(num >= 40 && num < 50){
            int freq = num/40;
            StringBuilder br = new StringBuilder();
          
            for(int i = 0; i< freq; i++){
                br.append(map.get(40));
            }
            return br.toString() + helper(num%40);
        }
        else if(num >= 50 && num < 90){
             int freq = num/50;
            StringBuilder br = new StringBuilder();
          
            for(int i = 0; i< freq; i++){
                br.append(map.get(50));
            }
            return br.toString() + helper(num%50);
        }
        else if(num >= 90 && num < 100){
            int freq = num/90;
            StringBuilder br = new StringBuilder();
       
            for(int i = 0; i< freq; i++){
                br.append(map.get(90));
            }
            return br.toString() + helper(num%90);
        }
        else if(num >= 100 && num < 400){
            int freq = num/100;
            StringBuilder br = new StringBuilder();
       
            for(int i = 0; i< freq; i++){
                br.append(map.get(100));
            }
            return br.toString() + helper(num%100);
        }
        else if(num >= 400 && num < 500){
            int freq = num/400;
            StringBuilder br = new StringBuilder();
           
            for(int i = 0; i< freq; i++){
                br.append(map.get(400));
            }
            return br.toString() + helper(num%400);
        }
        else if(num >= 500 && num < 900){
            int freq = num/500;
              StringBuilder br = new StringBuilder();
           
            for(int i = 0; i< freq; i++){
                br.append(map.get(500));
            }
            return br.toString() + helper(num%500);
        }
        else if(num >= 900 && num < 1000){
            int freq = num/900;
            StringBuilder br = new StringBuilder();
           
            for(int i = 0; i< freq; i++){
                br.append(map.get(900));
            }
            return br.toString() + helper(num%900);
        }
            
        return "";    
            
    }
}
